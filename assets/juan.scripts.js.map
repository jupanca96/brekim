{"version":3,"file":"juan.scripts.js","mappingsvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://endrock-webpack/./node_modules/ajaxinate/src/ajaxinate.js","webpack://endrock-webpack/./src/js/swiper.js","webpack://endrock-webpack/webpack/bootstrap","webpack://endrock-webpack/webpack/runtime/define property getters","webpack://endrock-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://endrock-webpack/webpack/runtime/make namespace object","webpack://endrock-webpack/./src/js/index.js"],"sourcesContent":["/* @preserve\n * https://github.com/Elkfox/Ajaxinate\n * Copyright (c) 2017 Elkfox Co Pty Ltd (elkfox.com)\n * MIT License (do not remove above copyright!)\n */\n\n/* Configurable options;\n *\n * method: scroll or click\n * container: selector of repeating content\n * pagination: selector of pagination container\n * offset: number of pixels before the bottom to start loading more on scroll\n * loadingText: 'Loading', The text shown during when appending new content\n * callback: null, callback function after new content is appended\n *\n * Usage;\n *\n * import {Ajaxinate} from 'ajaxinate';\n *\n * new Ajaxinate({\n *   offset: 5000,\n *   loadingText: 'Loading more...',\n * });\n */\n\n/* eslint-env browser */\nexport function Ajaxinate(config) {\n  const settings = config || {};\n\n  const defaults = {\n    method: 'scroll',\n    container: '#AjaxinateContainer',\n    pagination: '#AjaxinatePagination',\n    offset: 0,\n    loadingText: 'Loading',\n    callback: null,\n  };\n\n  // Merge custom configs with defaults\n  this.settings = Object.assign(defaults, settings);\n\n  // Functions\n  this.addScrollListeners = this.addScrollListeners.bind(this);\n  this.addClickListener = this.addClickListener.bind(this);\n  this.checkIfPaginationInView = this.checkIfPaginationInView.bind(this);\n  this.preventMultipleClicks = this.preventMultipleClicks.bind(this);\n  this.removeClickListener = this.removeClickListener.bind(this);\n  this.removeScrollListener = this.removeScrollListener.bind(this);\n  this.removePaginationElement = this.removePaginationElement.bind(this);\n  this.destroy = this.destroy.bind(this);\n\n  // Selectors\n  this.containerElement = document.querySelector(this.settings.container);\n  this.paginationElement = document.querySelector(this.settings.pagination);\n  this.initialize();\n}\n\nAjaxinate.prototype.initialize = function initialize() {\n  if (!this.containerElement) { return; }\n\n  const initializers = {\n    click: this.addClickListener,\n    scroll: this.addScrollListeners,\n  };\n\n  initializers[this.settings.method]();\n};\n\nAjaxinate.prototype.addScrollListeners = function addScrollListeners() {\n  if (!this.paginationElement) { return; }\n\n  document.addEventListener('scroll', this.checkIfPaginationInView);\n  window.addEventListener('resize', this.checkIfPaginationInView);\n  window.addEventListener('orientationchange', this.checkIfPaginationInView);\n};\n\nAjaxinate.prototype.addClickListener = function addClickListener() {\n  if (!this.paginationElement) { return; }\n\n  this.nextPageLinkElement = this.paginationElement.querySelector('a');\n  this.clickActive = true;\n\n  if (typeof this.nextPageLinkElement !== 'undefined' && this.nextPageLinkElement !== null) {\n    this.nextPageLinkElement.addEventListener('click', this.preventMultipleClicks);\n  }\n};\n\nAjaxinate.prototype.preventMultipleClicks = function preventMultipleClicks(event) {\n  event.preventDefault();\n\n  if (!this.clickActive) { return; }\n\n  this.nextPageLinkElement.innerText = this.settings.loadingText;\n  this.nextPageUrl = this.nextPageLinkElement.href;\n  this.clickActive = false;\n\n  this.loadMore();\n};\n\nAjaxinate.prototype.checkIfPaginationInView = function checkIfPaginationInView() {\n  const top = this.paginationElement.getBoundingClientRect().top - this.settings.offset;\n  const bottom = this.paginationElement.getBoundingClientRect().bottom + this.settings.offset;\n\n  if (top <= window.innerHeight && bottom >= 0) {\n    this.nextPageLinkElement = this.paginationElement.querySelector('a');\n    this.removeScrollListener();\n\n    if (this.nextPageLinkElement) {\n      this.nextPageLinkElement.innerText = this.settings.loadingText;\n      this.nextPageUrl = this.nextPageLinkElement.href;\n\n      this.loadMore();\n    }\n  }\n};\n\nAjaxinate.prototype.loadMore = function loadMore() {\n  this.request = new XMLHttpRequest();\n\n  this.request.onreadystatechange = function success() {\n    if (!this.request.responseXML) { return; }\n    if (!this.request.readyState === 4 || !this.request.status === 200) { return; }\n\n    const newContainer = this.request.responseXML.querySelectorAll(this.settings.container)[0];\n    const newPagination = this.request.responseXML.querySelectorAll(this.settings.pagination)[0];\n\n    this.containerElement.insertAdjacentHTML('beforeend', newContainer.innerHTML);\n\n    if (typeof newPagination === 'undefined') {\n      this.removePaginationElement();\n    } else {\n      this.paginationElement.innerHTML = newPagination.innerHTML;\n\n      if (this.settings.callback && typeof this.settings.callback === 'function') {\n        this.settings.callback(this.request.responseXML);\n      }\n\n      this.initialize();\n    }\n  }.bind(this);\n\n  this.request.open('GET', this.nextPageUrl);\n  this.request.responseType = 'document';\n  this.request.send();\n};\n\nAjaxinate.prototype.removeClickListener = function removeClickListener() {\n  this.nextPageLinkElement.removeEventListener('click', this.preventMultipleClicks);\n};\n\nAjaxinate.prototype.removePaginationElement = function removePaginationElement() {\n  this.paginationElement.innerHTML = '';\n  this.destroy();\n};\n\nAjaxinate.prototype.removeScrollListener = function removeScrollListener() {\n  document.removeEventListener('scroll', this.checkIfPaginationInView);\n  window.removeEventListener('resize', this.checkIfPaginationInView);\n  window.removeEventListener('orientationchange', this.checkIfPaginationInView);\n};\n\nAjaxinate.prototype.destroy = function destroy() {\n  const destroyers = {\n    click: this.removeClickListener,\n    scroll: this.removeScrollListener,\n  };\n\n  destroyers[this.settings.method]();\n\n  return this;\n};\n\nexport default Ajaxinate;\n","export function swiperValueprops() {\n  console.log(\"swiper\");\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { swiperValueprops } from \"./swiper\";\nimport { Ajaxinate } from \"ajaxinate\";\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // ajaxinate\n  new Ajaxinate({\n    container: '#AjaxinateContainer',\n    pagination: '#AjaxinatePagination',\n    method: 'click',\n    loadingText: \"Loading\"\n  });\n\n  // slider para value props home\n  //swiperValueprops();\n});"],"names":[],"sourceRoot":""}